{
	"id": "baf23b37357b182870a410e0bf1c6be6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Wallet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.13;\r\n\r\ncontract EtherWallet {\r\n    address payable public owner;\r\n\r\n    constructor() {\r\n        owner = payable(msg.sender);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function withdraw(uint _amount) external {\r\n        require(msg.sender == owner, \"caller is not owner\");\r\n        payable(msg.sender).transfer(_amount);\r\n    }\r\n\r\n    function getBalance() external view returns (uint) {\r\n        return address(this).balance;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 199
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Wallet.sol": {
				"EtherWallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Wallet.sol\":61:499  contract EtherWallet {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Wallet.sol\":126:186  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Wallet.sol\":151:156  owner */\n  0x00\n    /* \"contracts/Wallet.sol\":151:178  owner = payable(msg.sender) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Wallet.sol\":167:177  msg.sender */\n  caller\n    /* \"contracts/Wallet.sol\":151:178  owner = payable(msg.sender) */\n  or\n  swap1\n  sstore\n    /* \"contracts/Wallet.sol\":61:499  contract EtherWallet {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Wallet.sol\":61:499  contract EtherWallet {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Wallet.sol\":398:496  function getBalance() external view returns (uint) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      mload(0x40)\n        /* \"contracts/Wallet.sol\":467:488  address(this).balance */\n      selfbalance\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Wallet.sol\":398:496  function getBalance() external view returns (uint) {... */\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Wallet.sol\":231:390  function withdraw(uint _amount) external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/Wallet.sol\":89:117  address payable public owner */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      sload(0x00)\n      tag_19\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_19:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":561:593   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":543:594   */\n      dup2\n      mstore\n        /* \"#utility.yul\":531:533   */\n      0x20\n        /* \"#utility.yul\":516:534   */\n      add\n        /* \"contracts/Wallet.sol\":89:117  address payable public owner */\n      tag_11\n        /* \"#utility.yul\":381:600   */\n      jump\n        /* \"contracts/Wallet.sol\":231:390  function withdraw(uint _amount) external {... */\n    tag_17:\n        /* \"contracts/Wallet.sol\":305:310  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Wallet.sol\":291:301  msg.sender */\n      caller\n        /* \"contracts/Wallet.sol\":291:310  msg.sender == owner */\n      eq\n        /* \"contracts/Wallet.sol\":283:334  require(msg.sender == owner, \"caller is not owner\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":807:809   */\n      0x20\n        /* \"contracts/Wallet.sol\":283:334  require(msg.sender == owner, \"caller is not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":789:810   */\n      mstore\n        /* \"#utility.yul\":846:848   */\n      0x13\n        /* \"#utility.yul\":826:844   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":819:849   */\n      mstore\n      shl(0x69, 0x31b0b63632b91034b9903737ba1037bbb732b9)\n        /* \"#utility.yul\":865:883   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":858:907   */\n      mstore\n        /* \"#utility.yul\":924:942   */\n      0x64\n      add\n        /* \"contracts/Wallet.sol\":283:334  require(msg.sender == owner, \"caller is not owner\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contracts/Wallet.sol\":345:382  payable(msg.sender).transfer(_amount) */\n      mload(0x40)\n        /* \"contracts/Wallet.sol\":353:363  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Wallet.sol\":345:382  payable(msg.sender).transfer(_amount) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/Wallet.sol\":374:381  _amount */\n      dup4\n      swap1\n        /* \"contracts/Wallet.sol\":345:382  payable(msg.sender).transfer(_amount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/Wallet.sol\":374:381  _amount */\n      dup6\n        /* \"contracts/Wallet.sol\":353:363  msg.sender */\n      dup9\n        /* \"contracts/Wallet.sol\":345:382  payable(msg.sender).transfer(_amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n        /* \"contracts/Wallet.sol\":231:390  function withdraw(uint _amount) external {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:376   */\n    tag_16:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      dup1\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_33:\n      pop\n        /* \"#utility.yul\":347:370   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:376   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cbe3515ef15e00f63f756c3077b6312549f7dee3a70e518831d2bb89faa9c0fa64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610192806100326000396000f3fe6080604052600436106100385760003560e01c806312065fe0146100445780632e1a7d4d146100645780638da5cb5b1461008657600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b506040514781526020015b60405180910390f35b34801561007057600080fd5b5061008461007f366004610143565b6100be565b005b34801561009257600080fd5b506000546100a6906001600160a01b031681565b6040516001600160a01b03909116815260200161005b565b6000546001600160a01b031633146101125760405162461bcd60e51b815260206004820152601360248201527231b0b63632b91034b9903737ba1037bbb732b960691b604482015260640160405180910390fd5b604051339082156108fc029083906000818181858888f1935050505015801561013f573d6000803e3d6000fd5b5050565b60006020828403121561015557600080fd5b503591905056fea2646970667358221220cbe3515ef15e00f63f756c3077b6312549f7dee3a70e518831d2bb89faa9c0fa64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x192 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SELFBALANCE DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x143 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xA6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x112 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x31B0B63632B91034B9903737BA1037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x13F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xE3 MLOAD 0x5E CALL 0x5E STOP 0xF6 EXTCODEHASH PUSH22 0x6C3077B6312549F7DEE3A70E518831D2BB89FAA9C0FA PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "61:438:0:-:0;;;126:60;;;;;;;;;-1:-1:-1;151:5:0;:27;;-1:-1:-1;;;;;;151:27:0;167:10;151:27;;;61:438;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_42": {
									"entryPoint": 190,
									"id": 42,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_71bf1d68d1389a2700f2d22d4c4aeb9705cf8c62dc7efd39c7b83facc381f197__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:950:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "266:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "312:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "321:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "324:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "279:32:1"
															},
															"nodeType": "YulIf",
															"src": "276:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "347:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "347:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "337:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "232:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "243:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "255:6:1",
														"type": ""
													}
												],
												"src": "196:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "498:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "508:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "520:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "508:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "550:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "565:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "581:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "577:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "577:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "590:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "573:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "573:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "561:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "543:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "543:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "467:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "478:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "489:4:1",
														"type": ""
													}
												],
												"src": "381:219:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "779:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "796:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "807:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "789:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "789:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "789:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "830:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "841:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "826:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "846:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "819:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "819:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "819:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "869:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "880:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "865:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "865:18:1"
																	},
																	{
																		"hexValue": "63616c6c6572206973206e6f74206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "885:21:1",
																		"type": "",
																		"value": "caller is not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "858:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "858:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "858:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "916:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "928:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "924:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "916:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_71bf1d68d1389a2700f2d22d4c4aeb9705cf8c62dc7efd39c7b83facc381f197__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "756:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "770:4:1",
														"type": ""
													}
												],
												"src": "605:343:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_71bf1d68d1389a2700f2d22d4c4aeb9705cf8c62dc7efd39c7b83facc381f197__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"caller is not owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c806312065fe0146100445780632e1a7d4d146100645780638da5cb5b1461008657600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b506040514781526020015b60405180910390f35b34801561007057600080fd5b5061008461007f366004610143565b6100be565b005b34801561009257600080fd5b506000546100a6906001600160a01b031681565b6040516001600160a01b03909116815260200161005b565b6000546001600160a01b031633146101125760405162461bcd60e51b815260206004820152601360248201527231b0b63632b91034b9903737ba1037bbb732b960691b604482015260640160405180910390fd5b604051339082156108fc029083906000818181858888f1935050505015801561013f573d6000803e3d6000fd5b5050565b60006020828403121561015557600080fd5b503591905056fea2646970667358221220cbe3515ef15e00f63f756c3077b6312549f7dee3a70e518831d2bb89faa9c0fa64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SELFBALANCE DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x143 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xA6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x112 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x31B0B63632B91034B9903737BA1037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x13F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xE3 MLOAD 0x5E CALL 0x5E STOP 0xF6 EXTCODEHASH PUSH22 0x6C3077B6312549F7DEE3A70E518831D2BB89FAA9C0FA PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "61:438:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;398:98;;;;;;;;;;-1:-1:-1;398:98:0;;467:21;160:25:1;;148:2;133:18;398:98:0;;;;;;;;231:159;;;;;;;;;;-1:-1:-1;231:159:0;;;;;:::i;:::-;;:::i;:::-;;89:28;;;;;;;;;;-1:-1:-1;89:28:0;;;;-1:-1:-1;;;;;89:28:0;;;;;;-1:-1:-1;;;;;561:32:1;;;543:51;;531:2;516:18;89:28:0;381:219:1;231:159:0;305:5;;-1:-1:-1;;;;;305:5:0;291:10;:19;283:51;;;;-1:-1:-1;;;283:51:0;;807:2:1;283:51:0;;;789:21:1;846:2;826:18;;;819:30;-1:-1:-1;;;865:18:1;;;858:49;924:18;;283:51:0;;;;;;;;345:37;;353:10;;345:37;;;;;374:7;;345:37;;;;374:7;353:10;345:37;;;;;;;;;;;;;;;;;;;;;231:159;:::o;196:180:1:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:1;;196:180;-1:-1:-1;196:180:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "80400",
								"executionCost": "24364",
								"totalCost": "104764"
							},
							"external": {
								"getBalance()": "146",
								"owner()": "2359",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 499,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 499,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 499,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 186,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 186,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 186,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 126,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 186,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 126,
									"end": 186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 186,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 186,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 126,
									"end": 186,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 186,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 151,
									"end": 156,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 178,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 151,
									"end": 178,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 151,
									"end": 178,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 167,
									"end": 177,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 151,
									"end": 178,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 151,
									"end": 178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 151,
									"end": 178,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 499,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 499,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 499,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 499,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 499,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 499,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 499,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cbe3515ef15e00f63f756c3077b6312549f7dee3a70e518831d2bb89faa9c0fa64736f6c634300080d0033",
									".code": [
										{
											"begin": 61,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 398,
											"end": 496,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 398,
											"end": 496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 398,
											"end": 496,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 398,
											"end": 496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 398,
											"end": 496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 398,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 398,
											"end": 496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 398,
											"end": 496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 398,
											"end": 496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 398,
											"end": 496,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 398,
											"end": 496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 398,
											"end": 496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 467,
											"end": 488,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 398,
											"end": 496,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 398,
											"end": 496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 398,
											"end": 496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 398,
											"end": 496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 398,
											"end": 496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 398,
											"end": 496,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 398,
											"end": 496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 398,
											"end": 496,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 231,
											"end": 390,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 390,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 231,
											"end": 390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 390,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 231,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 231,
											"end": 390,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 390,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 231,
											"end": 390,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 231,
											"end": 390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 231,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 231,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 231,
											"end": 390,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 231,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 231,
											"end": 390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 231,
											"end": 390,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 231,
											"end": 390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 231,
											"end": 390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 231,
											"end": 390,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 231,
											"end": 390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 390,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 117,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 89,
											"end": 117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 117,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 89,
											"end": 117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 89,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 89,
											"end": 117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 117,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 89,
											"end": 117,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 89,
											"end": 117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 89,
											"end": 117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 89,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 89,
											"end": 117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 89,
											"end": 117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 89,
											"end": 117,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 117,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 89,
											"end": 117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 89,
											"end": 117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 561,
											"end": 593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 561,
											"end": 593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 543,
											"end": 594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 543,
											"end": 594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 516,
											"end": 534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 89,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 381,
											"end": 600,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 231,
											"end": 390,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 231,
											"end": 390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 305,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 305,
											"end": 310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 291,
											"end": 301,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 283,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 283,
											"end": 334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 283,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 283,
											"end": 334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 283,
											"end": 334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 807,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 283,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 283,
											"end": 334,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 283,
											"end": 334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 789,
											"end": 810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 846,
											"end": 848,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 826,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 826,
											"end": 844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 826,
											"end": 844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 819,
											"end": 849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B0B63632B91034B9903737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 865,
											"end": 883,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 865,
											"end": 883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 865,
											"end": 883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 858,
											"end": 907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 924,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 924,
											"end": 942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 283,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 283,
											"end": 334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 283,
											"end": 334,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 283,
											"end": 334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 334,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 283,
											"end": 334,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 283,
											"end": 334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 353,
											"end": 363,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 353,
											"end": 363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 374,
											"end": 381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 381,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 353,
											"end": 363,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 345,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 345,
											"end": 382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 231,
											"end": 390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 231,
											"end": 390,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0",
							"owner()": "8da5cb5b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Wallet.sol\":\"EtherWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"contracts/Wallet.sol\":{\"keccak256\":\"0x492ef1e7f22830a8814e59712965c0faf002291af19cc2ba090ed96e3bd0b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18eff9d6034d306942de0dbabc0e457864645a5ba3e4aa497a960071d29fed61\",\"dweb:/ipfs/QmPyDJwoTH5i54sWTCUY1sCJMZ9Z7jvaVzQUpyC3PwEwnM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Wallet.sol:EtherWallet",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Wallet.sol": {
				"ast": {
					"absolutePath": "contracts/Wallet.sol",
					"exportedSymbols": {
						"EtherWallet": [
							55
						]
					},
					"id": 56,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EtherWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 55,
							"linearizedBaseContracts": [
								55
							],
							"name": "EtherWallet",
							"nameLocation": "70:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "112:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 55,
									"src": "89:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "89:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "140:46:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "151:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 9,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "167:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "167:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "159:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 7,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "159:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "159:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "151:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "151:27:0"
											}
										]
									},
									"id": 15,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "137:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "140:0:0"
									},
									"scope": 55,
									"src": "126:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "221:2:0",
										"statements": []
									},
									"id": 19,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "201:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "221:0:0"
									},
									"scope": 55,
									"src": "194:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "272:118:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 25,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "291:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "291:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 27,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "305:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "291:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616c6c6572206973206e6f74206f776e6572",
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "312:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71bf1d68d1389a2700f2d22d4c4aeb9705cf8c62dc7efd39c7b83facc381f197",
																"typeString": "literal_string \"caller is not owner\""
															},
															"value": "caller is not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71bf1d68d1389a2700f2d22d4c4aeb9705cf8c62dc7efd39c7b83facc381f197",
																"typeString": "literal_string \"caller is not owner\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "283:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "283:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "283:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "374:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 34,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "353:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 35,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "353:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "345:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 32,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "345:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "345:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "345:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "345:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "345:37:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "240:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "254:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "249:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "248:14:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:0:0"
									},
									"scope": 55,
									"src": "231:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "449:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 49,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "475:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EtherWallet_$55",
																	"typeString": "contract EtherWallet"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EtherWallet_$55",
																	"typeString": "contract EtherWallet"
																}
															],
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "467:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 47,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "467:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "467:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "467:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 46,
												"id": 52,
												"nodeType": "Return",
												"src": "460:28:0"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "407:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "443:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "443:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:6:0"
									},
									"scope": 55,
									"src": "398:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 56,
							"src": "61:438:0",
							"usedErrors": []
						}
					],
					"src": "33:468:0"
				},
				"id": 0
			}
		}
	}
}